//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3328.4
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3328.4.
// 
namespace WSClient.etier1 {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SXSBinding", Namespace="http://ETIER3/RemoteNorthwind/SoapProceduresRemote")]
    public class ProceduresRemote : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public ProceduresRemote() {
            this.Url = "http://ETIER3/RemoteNorthwind/SoapProceduresRemote";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ETIER3/RemoteNorthwind/SoapProceduresRemote/GetCustomerContactView", RequestNamespace="http://ETIER3/RemoteNorthwind/SoapProceduresRemote", ResponseNamespace="http://ETIER3/RemoteNorthwind/SoapProceduresRemote", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SqlRowSet", typeof(System.Data.DataSet), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SqlXml", typeof(System.Xml.XmlNode), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(typeof(SqlMessage), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SqlResultCode", typeof(int), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        public object[] GetCustomerContactView([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CustomerID) {
            object[] results = this.Invoke("GetCustomerContactView", new object[] {
                        CustomerID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerContactView(string CustomerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerContactView", new object[] {
                        CustomerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetCustomerContactView(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ETIER3/RemoteNorthwind/SoapProceduresRemote/CustOrderHist", RequestNamespace="http://ETIER3/RemoteNorthwind/SoapProceduresRemote", ResponseNamespace="http://ETIER3/RemoteNorthwind/SoapProceduresRemote", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SqlRowSet", typeof(System.Data.DataSet), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SqlXml", typeof(System.Xml.XmlNode), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(typeof(SqlMessage), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SqlResultCode", typeof(int), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        public object[] CustOrderHist([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CustomerID, out int returnValue) {
            object[] results = this.Invoke("CustOrderHist", new object[] {
                        CustomerID});
            returnValue = ((int)(results[1]));
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCustOrderHist(string CustomerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CustOrderHist", new object[] {
                        CustomerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndCustOrderHist(System.IAsyncResult asyncResult, out int returnValue) {
            object[] results = this.EndInvoke(asyncResult);
            returnValue = ((int)(results[1]));
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ETIER3/RemoteNorthwind/SoapProceduresRemote/SalesByCategory", RequestNamespace="http://ETIER3/RemoteNorthwind/SoapProceduresRemote", ResponseNamespace="http://ETIER3/RemoteNorthwind/SoapProceduresRemote", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SqlRowSet", typeof(System.Data.DataSet), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SqlXml", typeof(System.Xml.XmlNode), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(typeof(SqlMessage), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SqlResultCode", typeof(int), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        public object[] SalesByCategory([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CategoryName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string OrdYear, out int returnValue) {
            object[] results = this.Invoke("SalesByCategory", new object[] {
                        CategoryName,
                        OrdYear});
            returnValue = ((int)(results[1]));
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSalesByCategory(string CategoryName, string OrdYear, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SalesByCategory", new object[] {
                        CategoryName,
                        OrdYear}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndSalesByCategory(System.IAsyncResult asyncResult, out int returnValue) {
            object[] results = this.EndInvoke(asyncResult);
            returnValue = ((int)(results[1]));
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ETIER3/RemoteNorthwind/SoapProceduresRemote/GetAllCustomers", RequestNamespace="http://ETIER3/RemoteNorthwind/SoapProceduresRemote", ResponseNamespace="http://ETIER3/RemoteNorthwind/SoapProceduresRemote", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SqlRowSet", typeof(System.Data.DataSet), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SqlXml", typeof(System.Xml.XmlNode), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(typeof(SqlMessage), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SqlResultCode", typeof(int), Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable=false)]
        public object[] GetAllCustomers() {
            object[] results = this.Invoke("GetAllCustomers", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllCustomers(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllCustomers", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetAllCustomers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlMessage")]
    public class SqlMessage {
        
        /// <remarks/>
        public int Class;
        
        /// <remarks/>
        public int LineNumber;
        
        /// <remarks/>
        public string Message;
        
        /// <remarks/>
        public int Number;
        
        /// <remarks/>
        public string Procedure;
        
        /// <remarks/>
        public string Server;
        
        /// <remarks/>
        public string Source;
        
        /// <remarks/>
        public int State;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types")]
        public bool IsNested;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNestedSpecified;
    }
}
